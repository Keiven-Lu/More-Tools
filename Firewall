A firewall is designed to inspect a network's or digital device's incoming and outgoing traffic. the goal is the same 
as for the security guard sitting outside a building: not letting any unauthorized visitor enter system or a network.
You instruct the firewall by giving rules to check against all the traffice. Anything that comes in or goes out of your 
device or network would face the firewall first. The firewall will allow or deny that traffic based on its maintained rules. 
Most firewalls today go beyond rule-based filtering and offer extra functionalities to protect your device or network 
from the outside world. We will discuss all these firewalls and perform practical lab demonstrations on a few

Stateless Firewall
This type of firewall operates on layer 3 and layer 4 of the OSI model and works solely by filtering the data based on 
predetermined rules without taking note of the state of the previous connections. This means it will match every packet with the 
rules regardless of whether it is part of a legitimate connection. It maintains no information on the state of the previous connections 
to make decisions for future packets. Due to this, these firewalls can process the packets quickly. However, they cannot apply complex policies 
to the data based on its relationship with the previous connections. Suppose the firewall denies a few packets from a single source based on its rules. 
Ideally, it should drop all the future packets from this source because the previous packets could not comply with the firewall’s rules. However, the firewall 
keeps forgetting this, and future packets from this source will be treated as new and matched by its rules again.

Stateful Firewall
Unlike stateless firewalls, this type of firewall goes beyond filtering packets by predetermined rules. It also keeps track of previous connections and stores 
them in a state table. This adds another layer of security by inspecting the packets based on their history with connections. Stateful firewalls operate at layer 3 
and layer 4 of the OSI model. Suppose the firewall accepts a few packets from a source address based on its rules. In that case, it will take note of this connection 
in its stated table and allow all the future packets for this connection to automatically get allowed without inspecting each of them. Similarly, the stateful firewalls 
take note of the connections for which they deny a few packets, and based upon this information, they deny all the subsequent packets coming from the same source.

Proxy Firewall
The problem with previous firewalls was their inability to inspect the contents of a packet. Proxy firewalls, or application-level gateways, act as intermediaries between 
the private network and the Internet and operate on the OSI model’s layer 7. They inspect the content of all packets as well. The requests made by users in a network are forwarded 
by this proxy after inspection and masking them with their own IP address to provide anonymity for the internal IP addresses. Content filtering policies can be applied to these firewalls 
to allow/deny incoming and outgoing traffic based on their content.

Next-Generation Firewall (NGFW)
This is the most advanced type of firewall that operates from layer 3 to layer 7 of the OSI model, offering deep packet inspection and other functionalities that enhance the security of 
incoming and outgoing network traffic. It has an intrusion prevention system that blocks malicious activities in real time. It offers heuristic analysis by analyzing the patterns of attacks 
and blocking them instantly before reaching the network. NGFWs have SSL/TLS decryption capabilities, which inspect the packets after decrypting them and correlate the data with the threat intelligence 
feeds to make efficient decisions.

The table below lists each firewall’s characteristics, which will help you choose the most suitable firewall for different use cases.

Firewalls	Characteristics
Stateless firewalls	
- Basic filtering
- No track of previous connections
- Efficient for high-speed networks
Stateful firewalls	
- Recognize traffic by patterns
- Complex rules can be applicable
- Monitor the network connections
Proxy firewalls	
- Inspect the data inside the packets as well
- Provides content filtering options
- Provides application control
- Decrypts and inspects SSL/TLS data packets
Next-generation firewalls	
- Provides advanced threat protection
- Comes with an intrusion prevention system
- Identify anomalies based on heuristic analysis
- Decrypts and inspects SSL/TLS data packets

The basic components of a firewall’s rule are described below:

Source address: The machine’s IP address that would originate the traffic.
Destination address: The machine’s IP address that would receive the data.
Port: The port number for the traffic.
Protocol: The protocol that would be used during the communication.
Action: This defines the action that would be taken upon identifying any traffic of this particular nature.
Direction: This field defines the rule’s applicability to incoming or outgoing traffic.

Allow 
A rule's "Allow" action indicates that the particular traffic defined inside the rule would be permitted

Deny 
A rule's "Deny" action means that the traffic defined inside the rule would be blocked and not permitted

Forward
The action "Forward" redirects traffic to a different network segment using the forwarding rules created on the firewall.
This applies to the firewalls that provide routing functionality and act as gateways between different network segments

Inbound Rules 
Rules are categorized as inbound rules when they are mean to be applied to incoming traffic only. For example, you might allow
incoming HTTP traffic (port 80) on your web server

Outbound Rules
These rules are made for outgoing traffic only. For example, blocking all outgoing SMTP traffic (port 25) from all the devices 
except the mail server

Forward Rules 
Forwarding rules are created to forward specific traffic inside the network. For example, a forwarding rule can be created to forward the 
incoming HTTP (port 80) traffic to the web server located in your network


Windows Defender Firewall
Windows Defender is a built-in firewall introduced by Microsoft in the Windows OS. This firewall contains all the basic functionality for 
creating, allowing, or denying specific programs or creating customized rules. This task is designed to cover some of the essential components 
of the Windows Defender Firewall, which you can utilize to restrict your system’s incoming and outgoing network traffic. To open this firewall, 
you have to open the Windows search and type "Windows Defender Firewall."

Network Profiles
There are two available network profiles. Windows firewall determines your current network based on Network Location Awareness (NLA) and applies 
that profile firewall settings for you. We can have different firewall settings for each of them.

Private networks: This includes the firewall configurations to apply when connected to our home network.
Guest or public networks: This includes the firewall configurations to apply when connected to a public or untrusted network like coffee shops, 
restaurants, or similar. For example, when connecting to public networks, you can configure firewall settings to block all incoming network connections 
and allow only some outgoing connections that are essential for you. These settings will apply to the public network profile and will not be implemented 
when you are in your private home network.

Netfilter
Netfilter is the framework inside the Linux OS with core firewall functionalities, including packet filtering, NAT, and connection tracking. This framework 
serves as the foundation for various firewall utilities available in Linux to control network traffic. Some common firewall utilities that utilize this framework are listed below:

iptables: This is the most widely used utility in many Linux distributions. It uses the Netfilter framework that provides various functionalities to control network traffic.
nftables: It is a successor to the “iptables” utility, with enhanced packet filtering and NAT capabilities. It is also based on the Netfilter framework.
firewalld: This utility also operates on the Netfilter framework and has predefined rule sets. It works differently from the others and comes with different pre-built network zone configurations.

ufw 
ufw (Uncomplicated Firewall), as the name says, eliminates the complications of making rules in a complex syntax in “iptables”(or its successor) by giving you an easier interface. It is more beginner-friendly. 
Basically, whatever rules you need in “iptables”, you can define them with some easy commands via ufw, which would then be configuring your desired rules in “iptables”. Let’s have a look at some basic ufw commands down below.




